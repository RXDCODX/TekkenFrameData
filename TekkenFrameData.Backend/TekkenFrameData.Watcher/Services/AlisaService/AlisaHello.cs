using System.Collections.Generic;
using TekkenFrameData.Library.Exstensions;
using TekkenFrameData.Library.Models.FrameData.Entitys.Enums;
using TekkenFrameData.Watcher.Services.TwitchFramedata;
using TwitchLib.Client.Events;
using TwitchLib.Client.Interfaces;

namespace TekkenFrameData.Watcher.Services.AlisaService;

public class AlisaHello(
    ITwitchClient client,
    IHostApplicationLifetime lifetime,
    IDbContextFactory<AppDbContext> factory
) : BackgroundService
{
    protected override Task ExecuteAsync(CancellationToken stoppingToken)
    {
        lifetime.ApplicationStarted.Register(() =>
        {
            client.OnChatCommandReceived += ClientOnOnChatCommandReceived;
        });

        lifetime.ApplicationStopping.Register(() =>
        {
            client.OnChatCommandReceived -= ClientOnOnChatCommandReceived;
        });

        return Task.CompletedTask;
    }

    private static readonly string[] Answers = """
        В замок канала {0} вошёл отважный воитель {1} в доспехах, сверкающих как солнце.
        В этот чат канала {0} проник таинственный искатель приключений {1}, скрывающий лицо за капюшоном.
        В таинственный чат канала {0} прошёл путешественник {1} с картой звездного неба за плечами.
        На волшебный стрим {0} зашёл мудрец {1} с пером и свитком знаний.
        В лунный свет канала {0} вышел странник {1}, ищущий ответы среди звезд.
        В ночные улицы чата вышел герой {1} с плащом и острым взглядом, готовый к битве с тенями прошлого.
        В зал славы канала {0} вошёл самурай {1}, готовый рассказать свою историю.
        На улицах города {0} засиял свет — это герой {1}, полный мечтаний и надежд.
        В уютную чайную в горах {0} поднялся отважный авантюрист {1}, наслаждаясь ароматом зелёного чая и мечтая о новых приключениях.,
        В оживлённый портовый город {0} прибыл мастер меча {1}, его глаза сверкают от предвкушения новых боёв и встреч.,
        В яркий фестивальный город {0} прибыл герой-авантюрист {1}, чтобы принять участие в легендарных состязаниях.,
        В уютную деревню {0} у подножия гор зашёл странник-авантюрист {1}, мечтающий о великих подвигах и новых друзьях.,
        В священные чертоги нашего сообщества ступил благородный воин {1}, чей путь достоин легенд!
        Приветствуем в зале легенд {0} — хранителя древних знаний и творца новых историй {1} !
        Величественно распахнулись врата чата {0} перед отважным рыцарем пера {1}, готовым поведать миру свои тайны!
        В сиянии славы появился среди нас {1} — истинный мастер слова, чьё присутствие озаряет наш чат!
        Приветствуем в обители творцов {1} — странника между мирами, готового поделиться своей уникальной историей!
        В зал избранных {0}, вошёл {1} — поэт битвы и воин слова, чьё появление предвещает великие рассказы!
        Славься, {1} — новоприбывший путник в нашем царстве историй, готовый вписать своё имя в легендах чата!
        Приветствуем в тайном зале {0}  — мудреца современности {1}, чьё слово несёт свет познания! 
        В звёздный порт {0}, приземлился отважный космонавт {1}, несущий в своём багаже удивительные истории о далёких мирах.
        В таинственную библиотеку древних заклинаний {0}, вошёл мудрый чародей {1}, чьи руки хранят секреты могущественных артефактов.
        В таверну {0} зашёл бывалый искатель приключений {1}, готовый поведать о своих невероятных подвигах за кружкой эля.
        В святилище слов и рифм {0}, вошёл талантливый поэт {1}, несущий в сердце новые строки и вдохновение.
        В легендарный город {0}, вошёл закалённый ветрами морей капитан {1}, чьи рассказы о плаваниях завораживают даже самых искушённых слушателей.
        В лаборатории будущего {0}, появился гениальный учёный {1}, чьи эксперименты готовы изменить представление о реальности.
        В королевский дворец {0}, вошёл благородный рыцарь {1}, чьё имя уже вписано в легенды о великих подвигах.
        В арт-кафе {0} современного мегаполиса, появился талантливый художник {1}, готовый поделиться своими творческими идеями.
        В залы древнего музея {0}, вошёл знаток истории {1}, чьи рассказы оживляют прошлое.
        В туманный лес {0}, вошёл загадочный странник {1}, несущий в себе тайны, скрытые от обычных глаз.
        В киберпанк-клуб {0}, вошёл гениальный хакер {1}, чьи пальцы творят чудеса в цифровом пространстве.
        В джаз-клуб {0}, вошёл талантливый музыкант {1}, готовый наполнить пространство чарующими мелодиями. 
        В таверну {0}, вошёл бывалый искатель приключений {1}, чей запылённый плащ хранит следы далёких странствий и легенды о великих подвигах.
        На перекрёстке миров {0}, появился отважный путешественник {1}, чьи глаза горят жаждой новых открытий и неизведанных троп.
        В прибрежный город {0}, прибыл легендарный мореплаватель {1}, чей корабль причалил к пристани с историями о затерянных островах и древних сокровищах.
        У костра собралось братство искателей, и вот в их круг вступил отважный воин {1}, готовый поведать о своих невероятных приключениях.
        В гильдии искателей {0}, появился новый герой {1}, чьё имя уже шепчут в тавернах, а подвиги ждут своего рассказчика.
        На вершине горы {0}, где облака касаются пиков, остановился отважный альпинист {1}, готовый поделиться историями о покорении неприступных вершин.
        В мифическом лесу {0}, показался опытный следопыт {1}, чьи следы ведут через самые опасные дебри и таинственные земли.
        В пещере древних сокровищ {0}, зажёг факел отважный исследователь {1}, готовый раскрыть тайны, скрытые от глаз обычных путешественников.
        На границе миров {0}, возник таинственный странник {1}, чьи рассказы о параллельных вселенных завораживают даже самых искушённых слушателей.
        В лагере путешественников {0}, разбили палатку новые гости, и среди них — отважный исследователь {1}, чьи истории о дальних краях не оставляют равнодушным никого.
        В лесу {0}, путники встретили мудрого друида {1}, чьи знания о тайнах природы и древних обрядах передаются из уст в уста. 
        В тронном зале королевского дворца {0}, появился благородный рыцарь {1}, чьё имя уже вписано в  легенды о великих подвигах и славных победах.
        В магической академии {0}, распахнулись врата перед талантливым чародеем {1}, чьи руки хранят секреты древних заклинаний и могущественной магии.
        В подземельях древнего замка {0}, зажёг факел отважный искатель приключений {1}, готовый раскрыть тайны, скрытые от глаз обычных смертных.
        В гильдии магов {0}, появился новый ученик {1}, чьё имя уже шепчут в тавернах, а подвиги ждут своего рассказчика.
        На вершине священной горы {0}, где облака касаются пиков, остановился могущественный волшебник {1}, готовый поведать о своих невероятных открытиях.
        В таверне {0}, появился бывалый странник {1}, чьи истории о драконах и древних сокровищах завораживают даже самых искушённых слушателей.
        В зале древних пророчеств {0}, возник таинственный провидец {1}, чьи видения о будущем уже начинают сбываться.
        В гильдии искателей приключений {0}, появился отважный герой {1}, чьё сердце полно отваги, а меч готов защищать слабых.
        В магическом саду {0}, расцвёл новый цветок — юный волшебник {1}, чьи способности только начинают раскрываться.
        В подземельях {0}, появился искусный кузнец {1}, чьи руки творят чудеса из металла и камня.
        В святилище древних богов {0}, возник посвящённый жрец {1}, чьи молитвы слышат сами небожители.
        В башне волшебника {0}, распахнулись двери перед талантливым учеником {1}, готовым постигать тайны высшей магии.
        В королевстве эльфов {0}, появился почётный гость {1}, чьё присутствие благословляет эти земли.
        В гильдии воров {0}, появился ловкий плут {1}, чьи умения в искусстве незаметного перемещения и находчивости вызывают восхищение у старших товарищей.
        В гильдии целителей {0}, появился талантливый ученик {1}, чьи руки несут исцеление и надежду всем страждущим.
        """.Split(Environment.NewLine);

    private int LastIndex { get; set; } = 0;
    private readonly Queue<int> _recentIndexes = new();
    private const int MaxRecentIndexes = 10;

    private async void ClientOnOnChatCommandReceived(object? sender, OnChatCommandReceivedArgs e)
    {
        var command = e.Command.CommandText;
        var activator = e.Command.ChatMessage.Username;
        var userId = e.Command.ChatMessage.UserId;
        var channel = e.Command.ChatMessage.Channel;
        var channelId = e.Command.ChatMessage.RoomId;
        var arguments = e.Command.ArgumentsAsList;

        if (command.Equals("hello", StringComparison.OrdinalIgnoreCase))
        {
            if (
                activator.Equals("AlisaAssistant", StringComparison.OrdinalIgnoreCase)
                || userId.Equals(TwitchClientExstension.AuthorId.ToString())
            )
            {
                if (arguments.Count == 1)
                {
                    await Task.Factory.StartNew(() =>
                    {
                        if (IsChannelApproved(channelId))
                        {
                            var index = GetRandomIndexExcludingRecent();

                            // Добавляем индекс в очередь последних использованных
                            _recentIndexes.Enqueue(index);

                            // Поддерживаем размер очереди не более MaxRecentIndexes
                            if (_recentIndexes.Count > MaxRecentIndexes)
                            {
                                _recentIndexes.Dequeue();
                            }

                            var answer = Answers[index];

                            var userName = arguments[0];

                            userName = userName.StartsWith('@') ? userName : '@' + userName;

                            var msg = string.Format(answer, channel.FirstCharToUpper(), userName);

                            if (
                                !client.JoinedChannels.Any(t =>
                                    t.Channel.Equals(channel, StringComparison.OrdinalIgnoreCase)
                                )
                            )
                            {
                                client.JoinChannel(channel);
                            }

                            client.SendMessage(channel, msg);
                        }
                    });
                }
            }
        }
    }

    /// <summary>
    /// Получает случайный индекс, исключая последние использованные
    /// </summary>
    private int GetRandomIndexExcludingRecent()
    {
        var availableIndexes = Enumerable
            .Range(0, Answers.Length)
            .Where(i => !_recentIndexes.Contains(i))
            .ToArray();

        // Если все индексы были использованы, очищаем очередь и возвращаем любой случайный
        if (availableIndexes.Length == 0)
        {
            _recentIndexes.Clear();
            return Random.Shared.Next(0, Answers.Length);
        }

        return availableIndexes[Random.Shared.Next(0, availableIndexes.Length)];
    }

    private bool IsChannelApproved(string channelId)
    {
        if (TwitchFramedate.ApprovedChannels.Contains(channelId))
        {
            return true;
        }
        else
        {
            //проверяем наличие канала в бд
            using var dbContext = factory.CreateDbContext();
            var isApproved = dbContext.TekkenChannels.Any(e =>
                e.TwitchId == channelId && e.FramedataStatus == TekkenFramedataStatus.Accepted
            );
            if (isApproved)
            {
                TwitchFramedate.ApprovedChannels.Add(channelId);
                return true;
            }
            else
            {
                return false;
            }
        }
    }
}
